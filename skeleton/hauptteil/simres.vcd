$date
	Thu Jul 02 10:26:53 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ProcessorTestbench $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var integer 32 # i [31:0] $end
$scope module proc $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 $ writedata [31:0] $end
$var wire 32 % readdata [31:0] $end
$var wire 32 & pc [31:0] $end
$var wire 32 ' instr [31:0] $end
$var wire 1 ( datawrite $end
$var wire 32 ) dataaddr [31:0] $end
$scope module dmem $end
$var wire 6 * addr [5:0] $end
$var wire 1 ! clk $end
$var wire 32 + rd [31:0] $end
$var wire 1 ( we $end
$var wire 32 , wd [31:0] $end
$upscope $end
$scope module imem $end
$var wire 6 - addr [5:0] $end
$var wire 32 . rd [31:0] $end
$upscope $end
$scope module mips $end
$var wire 1 ! clk $end
$var wire 32 / instr [31:0] $end
$var wire 32 0 readdata [31:0] $end
$var wire 1 " reset $end
$var wire 1 1 zero $end
$var wire 32 2 writedata [31:0] $end
$var wire 32 3 value [31:0] $end
$var wire 1 4 usevalue $end
$var wire 1 5 regwrite $end
$var wire 32 6 pc [31:0] $end
$var wire 1 ( memwrite $end
$var wire 1 7 memtoreg $end
$var wire 1 8 dojump $end
$var wire 1 9 dobranch $end
$var wire 5 : destreg [4:0] $end
$var wire 1 ; alusrcbimm $end
$var wire 32 < aluout [31:0] $end
$var wire 3 = alucontrol [2:0] $end
$scope module decoder $end
$var wire 32 > instr [31:0] $end
$var wire 1 1 zero $end
$var wire 6 ? op [5:0] $end
$var wire 6 @ funct [5:0] $end
$var reg 3 A alucontrol [2:0] $end
$var reg 1 ; alusrcbimm $end
$var reg 5 B destreg [4:0] $end
$var reg 1 9 dobranch $end
$var reg 1 8 dojump $end
$var reg 1 7 memtoreg $end
$var reg 1 ( memwrite $end
$var reg 1 5 regwrite $end
$var reg 1 4 usevalue $end
$var reg 32 C value [31:0] $end
$upscope $end
$scope module dp $end
$var wire 3 D alucontrol [2:0] $end
$var wire 1 ; alusrcbimm $end
$var wire 1 ! clk $end
$var wire 5 E destreg [4:0] $end
$var wire 1 9 dobranch $end
$var wire 32 F instr [31:0] $end
$var wire 1 8 jump $end
$var wire 1 7 memtoreg $end
$var wire 32 G readdata [31:0] $end
$var wire 1 5 regwrite $end
$var wire 1 " reset $end
$var wire 1 4 usevalue $end
$var wire 32 H value [31:0] $end
$var wire 32 I writedata [31:0] $end
$var wire 1 1 zero $end
$var wire 32 J srcbimm [31:0] $end
$var wire 32 K srcb [31:0] $end
$var wire 32 L srca [31:0] $end
$var wire 32 M signimm [31:0] $end
$var wire 32 N result [31:0] $end
$var wire 32 O pc [31:0] $end
$var wire 32 P aluout [31:0] $end
$scope module alu $end
$var wire 3 Q alucontrol [2:0] $end
$var wire 32 R b [31:0] $end
$var wire 32 S a [31:0] $end
$var reg 32 T hi [31:0] $end
$var reg 32 U lo [31:0] $end
$var reg 32 V result [31:0] $end
$var reg 1 1 zero $end
$upscope $end
$scope module gpr $end
$var wire 1 ! clk $end
$var wire 5 W ra1 [4:0] $end
$var wire 5 X ra2 [4:0] $end
$var wire 5 Y wa3 [4:0] $end
$var wire 32 Z wd3 [31:0] $end
$var wire 1 5 we3 $end
$var wire 32 [ rd2 [31:0] $end
$var wire 32 \ rd1 [31:0] $end
$upscope $end
$scope module pcenv $end
$var wire 1 ! clk $end
$var wire 1 9 dobranch $end
$var wire 1 8 dojump $end
$var wire 26 ] jumptarget [25:0] $end
$var wire 32 ^ progcounter [31:0] $end
$var wire 1 " reset $end
$var wire 32 _ nextpc [31:0] $end
$var wire 32 ` incpc [31:0] $end
$var wire 32 a branchpc [31:0] $end
$var wire 32 b branchoffset [31:0] $end
$var reg 32 c pc [31:0] $end
$scope module pcbranch $end
$var wire 32 d b [31:0] $end
$var wire 1 e cin $end
$var wire 32 f y [31:0] $end
$var wire 1 g cout $end
$var wire 32 h a [31:0] $end
$upscope $end
$scope module pcinc $end
$var wire 32 i a [31:0] $end
$var wire 32 j b [31:0] $end
$var wire 1 k cin $end
$var wire 32 l y [31:0] $end
$var wire 1 m cout $end
$upscope $end
$upscope $end
$scope module se $end
$var wire 16 n a [15:0] $end
$var wire 32 o y [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10100111001 o
b10100111001 n
0m
b10000000000000000000100 l
0k
b100 j
b10000000000000000000000 i
b10000000000000000000100 h
0g
b10000000001010011101000 f
0e
b1010011100100 d
b10000000000000000000000 c
b10100111001 b
b10000000001010011101000 a
b10000000000000000000100 `
b10000000000000000000100 _
b10000000000000000000000 ^
b10000010100111001 ]
b0 \
b11001010111111101011101010111110 [
b10100111001 Z
b1 Y
b1 X
b0 W
b10100111001 V
bx U
bx T
b0 S
b10100111001 R
b101 Q
b10100111001 P
b10000000000000000000000 O
b10100111001 N
b10100111001 M
b0 L
b11001010111111101011101010111110 K
b10100111001 J
b11001010111111101011101010111110 I
bx H
bx G
b100100000000010000010100111001 F
b1 E
b101 D
bx C
b1 B
b101 A
b111001 @
b1001 ?
b100100000000010000010100111001 >
b101 =
b10100111001 <
1;
b1 :
09
08
07
b10000000000000000000000 6
15
04
bx 3
b11001010111111101011101010111110 2
11
bx 0
b100100000000010000010100111001 /
b100100000000010000010100111001 .
b0 -
b11001010111111101011101010111110 ,
bx +
b1110 *
b10100111001 )
0(
b100100000000010000010100111001 '
b10000000000000000000000 &
bx %
b11001010111111101011101010111110 $
b100000 #
1"
1!
$end
#2
0!
#4
b10100111001 $
b10100111001 ,
b10100111001 2
b10100111001 I
b10100111001 K
b10100111001 [
1!
#5
0"
#6
0!
#8
b10101100011 N
b10101100011 Z
b11000 *
b10101100011 )
b10101100011 <
b10101100011 P
b10101100011 V
b10000000000000000001000 _
b10101000 d
b101010 J
b101010 R
b10100111001 L
b10100111001 S
b10100111001 \
b11001010111111101011101010111110 $
b11001010111111101011101010111110 ,
b11001010111111101011101010111110 2
b11001010111111101011101010111110 I
b11001010111111101011101010111110 K
b11001010111111101011101010111110 [
b10000000000000010110000 a
b10000000000000010110000 f
b10 :
b10 B
b10 E
b10 Y
b101010 @
b1000100000000000101010 ]
b101010 M
b101010 b
b101010 o
b101010 n
b1 W
b10 X
b10000000000000000001000 `
b10000000000000000001000 h
b10000000000000000001000 l
b100100001000100000000000101010 '
b100100001000100000000000101010 .
b100100001000100000000000101010 /
b100100001000100000000000101010 >
b100100001000100000000000101010 F
b1 -
b10000000000000000000100 &
b10000000000000000000100 6
b10000000000000000000100 O
b10000000000000000000100 ^
b10000000000000000000100 c
b10000000000000000000100 i
1!
#10
0!
#12
b1000101 N
b1000101 Z
b10001 *
b1000101 )
b1000101 <
b1000101 P
b1000101 V
b10000000000000000001100 _
b100010100 d
b1000101 J
b1000101 R
b0 L
b0 S
b0 \
b10000000000000100100000 a
b10000000000000100100000 f
b1000 :
b1000 B
b1000 E
b1000 Y
b101 @
b10000000000001000101 ]
b1000101 M
b1000101 b
b1000101 o
b1000101 n
b0 W
b1000 X
b11001010111111101011101010111110 $
b11001010111111101011101010111110 ,
b11001010111111101011101010111110 2
b11001010111111101011101010111110 I
b11001010111111101011101010111110 K
b11001010111111101011101010111110 [
b10000000000000000001100 `
b10000000000000000001100 h
b10000000000000000001100 l
b100100000010000000000001000101 '
b100100000010000000000001000101 .
b100100000010000000000001000101 /
b100100000010000000000001000101 >
b100100000010000000000001000101 F
b10 -
b10000000000000000001000 &
b10000000000000000001000 6
b10000000000000000001000 O
b10000000000000000001000 ^
b10000000000000000001000 c
b10000000000000000001000 i
1!
#14
0!
#16
b110100100 N
b110100100 Z
b101001 *
b110100100 )
b110100100 <
b110100100 P
b110100100 V
b10000000000000000010000 _
b11010010000 d
b110100100 J
b110100100 R
b10000000000011010100000 a
b10000000000011010100000 f
b1001 :
b1001 B
b1001 E
b1001 Y
b100100 @
b10010000000110100100 ]
b110100100 M
b110100100 b
b110100100 o
b110100100 n
b1001 X
b10000000000000000010000 `
b10000000000000000010000 h
b10000000000000000010000 l
b100100000010010000000110100100 '
b100100000010010000000110100100 .
b100100000010010000000110100100 /
b100100000010010000000110100100 >
b100100000010010000000110100100 F
b11 -
b11001010111111101011101010111110 $
b11001010111111101011101010111110 ,
b11001010111111101011101010111110 2
b11001010111111101011101010111110 I
b11001010111111101011101010111110 K
b11001010111111101011101010111110 [
b10000000000000000001100 &
b10000000000000000001100 6
b10000000000000000001100 O
b10000000000000000001100 ^
b10000000000000000001100 c
b10000000000000000001100 i
1!
#18
0!
#20
b11 N
b11 Z
b0 *
b11 )
b11 <
b11 P
b11 V
b10000000000000000010100 _
b1100 d
b11 J
b11 R
b10000000000000000100000 a
b10000000000000000100000 f
b1010 :
b1010 B
b1010 E
b1010 Y
b11 @
b10100000000000000011 ]
b11 M
b11 b
b11 o
b11 n
b1010 X
b11001010111111101011101010111110 $
b11001010111111101011101010111110 ,
b11001010111111101011101010111110 2
b11001010111111101011101010111110 I
b11001010111111101011101010111110 K
b11001010111111101011101010111110 [
b10000000000000000010100 `
b10000000000000000010100 h
b10000000000000000010100 l
b100100000010100000000000000011 '
b100100000010100000000000000011 .
b100100000010100000000000000011 /
b100100000010100000000000000011 >
b100100000010100000000000000011 F
b100 -
b10000000000000000010000 &
b10000000000000000010000 6
b10000000000000000010000 O
b10000000000000000010000 ^
b10000000000000000010000 c
b10000000000000000010000 i
1!
#22
0!
#24
b10100011110 N
b10100011110 Z
b111 *
b10000000000000000011000 _
b10100011110 )
b10100011110 <
b10100011110 P
b10100011110 V
b110000010001100 d
b1000101 J
b1000101 R
b10101100011 L
b10101100011 S
b10101100011 \
b10000000110000010100100 a
b10000000110000010100100 f
b1 =
b1 A
b1 D
b1 Q
0;
b11 :
b11 B
b11 E
b11 Y
b0 ?
b100011 @
b10010000001100000100011 ]
b1100000100011 M
b1100000100011 b
b1100000100011 o
b1100000100011 n
b10 W
b1000 X
b10000000000000000011000 `
b10000000000000000011000 h
b10000000000000000011000 l
b10010000001100000100011 '
b10010000001100000100011 .
b10010000001100000100011 /
b10010000001100000100011 >
b10010000001100000100011 F
b101 -
b1000101 $
b1000101 ,
b1000101 2
b1000101 I
b1000101 K
b1000101 [
b10000000000000000010100 &
b10000000000000000010100 6
b10000000000000000010100 O
b10000000000000000010100 ^
b10000000000000000010100 c
b10000000000000000010100 i
1!
#26
0!
#28
b1101111010 N
b1101111010 Z
b11110 *
b1101111010 )
b1101111010 <
b1101111010 P
b1101111010 V
b110100100 J
b110100100 R
b10000000000000000011100 _
b1000000010001100 d
b10100011110 L
b10100011110 S
b10100011110 \
b110100100 $
b110100100 ,
b110100100 2
b110100100 I
b110100100 K
b110100100 [
b10000001000000010101000 a
b10000001000000010101000 f
b100 :
b100 B
b100 E
b100 Y
b11010010010000000100011 ]
b10000000100011 M
b10000000100011 b
b10000000100011 o
b10000000100011 n
b11 W
b1001 X
b10000000000000000011100 `
b10000000000000000011100 h
b10000000000000000011100 l
b11010010010000000100011 '
b11010010010000000100011 .
b11010010010000000100011 /
b11010010010000000100011 >
b11010010010000000100011 F
b110 -
b10000000000000000011000 &
b10000000000000000011000 6
b10000000000000000011000 O
b10000000000000000011000 ^
b10000000000000000011000 c
b10000000000000000011000 i
1!
#30
0!
#32
b11 J
b11 R
b10000000000000000100000 _
b10 T
b1100000111111000011000000111010 U
b1100100 d
b11001010111111101011101010111110 L
b11001010111111101011101010111110 S
b11001010111111101011101010111110 \
b11 $
b11 ,
b11 2
b11 I
b11 K
b11 [
b10000000000000010000100 a
b10000000000000010000100 f
b100 =
b100 A
b100 D
b100 Q
b0 :
b0 B
b0 E
b0 Y
b11001 @
b101010100000000000011001 ]
b11001 M
b11001 b
b11001 o
b11001 n
b101 W
b1010 X
b10000000000000000100000 `
b10000000000000000100000 h
b10000000000000000100000 l
b101010100000000000011001 '
b101010100000000000011001 .
b101010100000000000011001 /
b101010100000000000011001 >
b101010100000000000011001 F
b111 -
b10000000000000000011100 &
b10000000000000000011100 6
b10000000000000000011100 O
b10000000000000000011100 ^
b10000000000000000011100 c
b10000000000000000011100 i
1!
#34
0!
#36
b1100000111111000011000000111010 N
b1100000111111000011000000111010 Z
b1110 *
b0 J
b0 R
b10000000000000000100100 _
b1100000111111000011000000111010 )
b1100000111111000011000000111010 <
b1100000111111000011000000111010 P
b1100000111111000011000000111010 V
b1100000001001000 d
b0 L
b0 S
b0 \
b0 $
b0 ,
b0 2
b0 I
b0 K
b0 [
b10000001100000001101100 a
b10000001100000001101100 f
b11 =
b11 A
b11 D
b11 Q
b110 :
b110 B
b110 E
b110 Y
b10010 @
b11000000010010 ]
b11000000010010 M
b11000000010010 b
b11000000010010 o
b11000000010010 n
b0 W
b0 X
b10000000000000000100100 `
b10000000000000000100100 h
b10000000000000000100100 l
b11000000010010 '
b11000000010010 .
b11000000010010 /
b11000000010010 >
b11000000010010 F
b1000 -
b10000000000000000100000 &
b10000000000000000100000 6
b10000000000000000100000 O
b10000000000000000100000 ^
b10000000000000000100000 c
b10000000000000000100000 i
1!
#38
0!
#40
b10 N
b10 Z
b0 *
b10000000000000000101000 _
b10 )
b10 <
b10 P
b10 V
b1110000001000000 d
b10000001110000001101000 a
b10000001110000001101000 f
b10 =
b10 A
b10 D
b10 Q
b111 :
b111 B
b111 E
b111 Y
b10000 @
b11100000010000 ]
b11100000010000 M
b11100000010000 b
b11100000010000 o
b11100000010000 n
b10000000000000000101000 `
b10000000000000000101000 h
b10000000000000000101000 l
b11100000010000 '
b11100000010000 .
b11100000010000 /
b11100000010000 >
b11100000010000 F
b1001 -
b10000000000000000100100 &
b10000000000000000100100 6
b10000000000000000100100 O
b10000000000000000100100 ^
b10000000000000000100100 c
b10000000000000000100100 i
1!
#42
0!
#44
bx N
bx Z
xg
bx T
bx U
bx _
bx J
bx R
bx00 d
bx L
bx S
bx \
bx $
bx ,
bx 2
bx I
bx K
bx [
bx a
bx f
b100 =
b100 A
b100 D
b100 Q
x8
x7
x(
x9
x;
bx :
bx B
bx E
bx Y
x5
bx ?
bx @
bx ]
bx M
bx b
bx o
bx n
bx W
bx X
b10000000000000000101100 `
b10000000000000000101100 h
b10000000000000000101100 l
bx '
bx .
bx /
bx >
bx F
b1010 -
b10000000000000000101000 &
b10000000000000000101000 6
b10000000000000000101000 O
b10000000000000000101000 ^
b10000000000000000101000 c
b10000000000000000101000 i
1!
#46
0!
#48
bx `
bx h
bx l
xm
bx -
bx &
bx 6
bx O
bx ^
bx c
bx i
1!
#50
0!
#52
1!
#54
0!
#55
b100000 #
