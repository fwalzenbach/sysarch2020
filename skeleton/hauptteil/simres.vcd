$date
	Sun Jul 05 12:42:43 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ProcessorTestbench $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var integer 32 # i [31:0] $end
$scope module proc $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 $ writedata [31:0] $end
$var wire 32 % readdata [31:0] $end
$var wire 32 & pc [31:0] $end
$var wire 32 ' instr [31:0] $end
$var wire 1 ( datawrite $end
$var wire 32 ) dataaddr [31:0] $end
$scope module dmem $end
$var wire 6 * addr [5:0] $end
$var wire 1 ! clk $end
$var wire 32 + rd [31:0] $end
$var wire 1 ( we $end
$var wire 32 , wd [31:0] $end
$upscope $end
$scope module imem $end
$var wire 6 - addr [5:0] $end
$var wire 32 . rd [31:0] $end
$upscope $end
$scope module mips $end
$var wire 1 ! clk $end
$var wire 32 / instr [31:0] $end
$var wire 32 0 readdata [31:0] $end
$var wire 1 " reset $end
$var wire 1 1 zero $end
$var wire 32 2 writedata [31:0] $end
$var wire 32 3 value [31:0] $end
$var wire 1 4 usevalue $end
$var wire 1 5 regwrite $end
$var wire 32 6 pc [31:0] $end
$var wire 1 ( memwrite $end
$var wire 1 7 memtoreg $end
$var wire 1 8 link $end
$var wire 1 9 jumpreg $end
$var wire 1 : dojump $end
$var wire 1 ; dobranch $end
$var wire 5 < destreg [4:0] $end
$var wire 1 = alusrcbimm $end
$var wire 32 > aluout [31:0] $end
$var wire 3 ? alucontrol [2:0] $end
$scope module decoder $end
$var wire 32 @ instr [31:0] $end
$var wire 1 1 zero $end
$var wire 6 A op [5:0] $end
$var wire 6 B funct [5:0] $end
$var reg 3 C alucontrol [2:0] $end
$var reg 1 = alusrcbimm $end
$var reg 5 D destreg [4:0] $end
$var reg 1 ; dobranch $end
$var reg 1 : dojump $end
$var reg 1 9 jumpreg $end
$var reg 1 8 link $end
$var reg 1 7 memtoreg $end
$var reg 1 ( memwrite $end
$var reg 1 5 regwrite $end
$var reg 1 4 usevalue $end
$var reg 32 E value [31:0] $end
$upscope $end
$scope module dp $end
$var wire 3 F alucontrol [2:0] $end
$var wire 1 = alusrcbimm $end
$var wire 1 ! clk $end
$var wire 5 G destreg [4:0] $end
$var wire 1 ; dobranch $end
$var wire 32 H instr [31:0] $end
$var wire 1 : jump $end
$var wire 1 9 jumpreg $end
$var wire 1 8 link $end
$var wire 1 7 memtoreg $end
$var wire 32 I readdata [31:0] $end
$var wire 1 5 regwrite $end
$var wire 1 " reset $end
$var wire 1 4 usevalue $end
$var wire 32 J value [31:0] $end
$var wire 32 K writedata [31:0] $end
$var wire 1 1 zero $end
$var wire 32 L srcbimm [31:0] $end
$var wire 32 M srcb [31:0] $end
$var wire 32 N srca [31:0] $end
$var wire 32 O signimm [31:0] $end
$var wire 32 P result [31:0] $end
$var wire 32 Q pc [31:0] $end
$var wire 26 R jumptarget [25:0] $end
$var wire 32 S aluout [31:0] $end
$scope module alu $end
$var wire 3 T alucontrol [2:0] $end
$var wire 32 U b [31:0] $end
$var wire 32 V a [31:0] $end
$var reg 32 W hi [31:0] $end
$var reg 32 X lo [31:0] $end
$var reg 32 Y result [31:0] $end
$var reg 1 1 zero $end
$upscope $end
$scope module gpr $end
$var wire 1 ! clk $end
$var wire 5 Z ra1 [4:0] $end
$var wire 5 [ ra2 [4:0] $end
$var wire 5 \ wa3 [4:0] $end
$var wire 32 ] wd3 [31:0] $end
$var wire 1 5 we3 $end
$var wire 32 ^ rd2 [31:0] $end
$var wire 32 _ rd1 [31:0] $end
$upscope $end
$scope module pcenv $end
$var wire 1 ! clk $end
$var wire 1 ; dobranch $end
$var wire 1 : dojump $end
$var wire 26 ` jumptarget [25:0] $end
$var wire 32 a progcounter [31:0] $end
$var wire 1 " reset $end
$var wire 32 b nextpc [31:0] $end
$var wire 32 c incpc [31:0] $end
$var wire 32 d branchpc [31:0] $end
$var wire 32 e branchoffset [31:0] $end
$var reg 32 f pc [31:0] $end
$scope module pcbranch $end
$var wire 32 g b [31:0] $end
$var wire 1 h cin $end
$var wire 32 i y [31:0] $end
$var wire 1 j cout $end
$var wire 32 k a [31:0] $end
$upscope $end
$scope module pcinc $end
$var wire 32 l a [31:0] $end
$var wire 32 m b [31:0] $end
$var wire 1 n cin $end
$var wire 32 o y [31:0] $end
$var wire 1 p cout $end
$upscope $end
$upscope $end
$scope module se $end
$var wire 16 q a [15:0] $end
$var wire 32 r y [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10100111001 r
b10100111001 q
0p
b10000000000000000000100 o
0n
b100 m
b10000000000000000000000 l
b10000000000000000000100 k
0j
b10000000001010011101000 i
0h
b1010011100100 g
b10000000000000000000000 f
b10100111001 e
b10000000001010011101000 d
b10000000000000000000100 c
b10000000000000000000100 b
b10000000000000000000000 a
b10000010100111001 `
b0 _
b11001010111111101011101010111110 ^
b10100111001 ]
b1 \
b1 [
b0 Z
b10100111001 Y
bx X
bx W
b0 V
b10100111001 U
b101 T
b10100111001 S
b10000010100111001 R
b10000000000000000000000 Q
b10100111001 P
b10100111001 O
b0 N
b11001010111111101011101010111110 M
b10100111001 L
b11001010111111101011101010111110 K
bx J
bx I
b100100000000010000010100111001 H
b1 G
b101 F
bx E
b1 D
b101 C
b111001 B
b1001 A
b100100000000010000010100111001 @
b101 ?
b10100111001 >
1=
b1 <
0;
0:
09
08
07
b10000000000000000000000 6
15
04
bx 3
b11001010111111101011101010111110 2
11
bx 0
b100100000000010000010100111001 /
b100100000000010000010100111001 .
b0 -
b11001010111111101011101010111110 ,
bx +
b1110 *
b10100111001 )
0(
b100100000000010000010100111001 '
b10000000000000000000000 &
bx %
b11001010111111101011101010111110 $
b100000 #
1"
1!
$end
#2
0!
#4
b10100111001 $
b10100111001 ,
b10100111001 2
b10100111001 K
b10100111001 M
b10100111001 ^
1!
#5
0"
#6
0!
#8
b10101100011 P
b10101100011 ]
b11000 *
b10101100011 )
b10101100011 >
b10101100011 S
b10101100011 Y
b10000000000000000001000 b
b1000100000000000101010 R
b1000100000000000101010 `
b10101000 g
b101010 L
b101010 U
b10100111001 N
b10100111001 V
b10100111001 _
b11001010111111101011101010111110 $
b11001010111111101011101010111110 ,
b11001010111111101011101010111110 2
b11001010111111101011101010111110 K
b11001010111111101011101010111110 M
b11001010111111101011101010111110 ^
b10000000000000010110000 d
b10000000000000010110000 i
b10 <
b10 D
b10 G
b10 \
b101010 B
b101010 O
b101010 e
b101010 r
b101010 q
b1 Z
b10 [
b10000000000000000001000 c
b10000000000000000001000 k
b10000000000000000001000 o
b100100001000100000000000101010 '
b100100001000100000000000101010 .
b100100001000100000000000101010 /
b100100001000100000000000101010 @
b100100001000100000000000101010 H
b1 -
b10000000000000000000100 &
b10000000000000000000100 6
b10000000000000000000100 Q
b10000000000000000000100 a
b10000000000000000000100 f
b10000000000000000000100 l
1!
#10
0!
#12
b1000101 P
b1000101 ]
b10001 *
b1000101 )
b1000101 >
b1000101 S
b1000101 Y
b10000000000000000001100 b
b10000000000001000101 R
b10000000000001000101 `
b100010100 g
b1000101 L
b1000101 U
b0 N
b0 V
b0 _
b10000000000000100100000 d
b10000000000000100100000 i
b1000 <
b1000 D
b1000 G
b1000 \
b101 B
b1000101 O
b1000101 e
b1000101 r
b1000101 q
b0 Z
b1000 [
b11001010111111101011101010111110 $
b11001010111111101011101010111110 ,
b11001010111111101011101010111110 2
b11001010111111101011101010111110 K
b11001010111111101011101010111110 M
b11001010111111101011101010111110 ^
b10000000000000000001100 c
b10000000000000000001100 k
b10000000000000000001100 o
b100100000010000000000001000101 '
b100100000010000000000001000101 .
b100100000010000000000001000101 /
b100100000010000000000001000101 @
b100100000010000000000001000101 H
b10 -
b10000000000000000001000 &
b10000000000000000001000 6
b10000000000000000001000 Q
b10000000000000000001000 a
b10000000000000000001000 f
b10000000000000000001000 l
1!
#14
0!
#16
b110100100 P
b110100100 ]
b101001 *
b110100100 )
b110100100 >
b110100100 S
b110100100 Y
b10000000000000000010000 b
b10010000000110100100 R
b10010000000110100100 `
b11010010000 g
b110100100 L
b110100100 U
b10000000000011010100000 d
b10000000000011010100000 i
b1001 <
b1001 D
b1001 G
b1001 \
b100100 B
b110100100 O
b110100100 e
b110100100 r
b110100100 q
b1001 [
b10000000000000000010000 c
b10000000000000000010000 k
b10000000000000000010000 o
b100100000010010000000110100100 '
b100100000010010000000110100100 .
b100100000010010000000110100100 /
b100100000010010000000110100100 @
b100100000010010000000110100100 H
b11 -
b11001010111111101011101010111110 $
b11001010111111101011101010111110 ,
b11001010111111101011101010111110 2
b11001010111111101011101010111110 K
b11001010111111101011101010111110 M
b11001010111111101011101010111110 ^
b10000000000000000001100 &
b10000000000000000001100 6
b10000000000000000001100 Q
b10000000000000000001100 a
b10000000000000000001100 f
b10000000000000000001100 l
1!
#18
0!
#20
b11 P
b11 ]
b0 *
b11 )
b11 >
b11 S
b11 Y
b10000000000000000010100 b
b10100000000000000011 R
b10100000000000000011 `
b1100 g
b11 L
b11 U
b10000000000000000100000 d
b10000000000000000100000 i
b1010 <
b1010 D
b1010 G
b1010 \
b11 B
b11 O
b11 e
b11 r
b11 q
b1010 [
b11001010111111101011101010111110 $
b11001010111111101011101010111110 ,
b11001010111111101011101010111110 2
b11001010111111101011101010111110 K
b11001010111111101011101010111110 M
b11001010111111101011101010111110 ^
b10000000000000000010100 c
b10000000000000000010100 k
b10000000000000000010100 o
b100100000010100000000000000011 '
b100100000010100000000000000011 .
b100100000010100000000000000011 /
b100100000010100000000000000011 @
b100100000010100000000000000011 H
b100 -
b10000000000000000010000 &
b10000000000000000010000 6
b10000000000000000010000 Q
b10000000000000000010000 a
b10000000000000000010000 f
b10000000000000000010000 l
1!
#22
0!
#24
b10100011110 P
b10100011110 ]
b111 *
b10000000000000000011000 b
b10100011110 )
b10100011110 >
b10100011110 S
b10100011110 Y
b10010000001100000100011 R
b10010000001100000100011 `
b110000010001100 g
b1000101 L
b1000101 U
b10101100011 N
b10101100011 V
b10101100011 _
b10000000110000010100100 d
b10000000110000010100100 i
b1 ?
b1 C
b1 F
b1 T
0=
b11 <
b11 D
b11 G
b11 \
b0 A
b100011 B
b1100000100011 O
b1100000100011 e
b1100000100011 r
b1100000100011 q
b10 Z
b1000 [
b10000000000000000011000 c
b10000000000000000011000 k
b10000000000000000011000 o
b10010000001100000100011 '
b10010000001100000100011 .
b10010000001100000100011 /
b10010000001100000100011 @
b10010000001100000100011 H
b101 -
b1000101 $
b1000101 ,
b1000101 2
b1000101 K
b1000101 M
b1000101 ^
b10000000000000000010100 &
b10000000000000000010100 6
b10000000000000000010100 Q
b10000000000000000010100 a
b10000000000000000010100 f
b10000000000000000010100 l
1!
#26
0!
#28
b1101111010 P
b1101111010 ]
b11110 *
b1101111010 )
b1101111010 >
b1101111010 S
b1101111010 Y
b110100100 L
b110100100 U
b10000000000000000011100 b
b11010010010000000100011 R
b11010010010000000100011 `
b1000000010001100 g
b10100011110 N
b10100011110 V
b10100011110 _
b110100100 $
b110100100 ,
b110100100 2
b110100100 K
b110100100 M
b110100100 ^
b10000001000000010101000 d
b10000001000000010101000 i
b100 <
b100 D
b100 G
b100 \
b10000000100011 O
b10000000100011 e
b10000000100011 r
b10000000100011 q
b11 Z
b1001 [
b10000000000000000011100 c
b10000000000000000011100 k
b10000000000000000011100 o
b11010010010000000100011 '
b11010010010000000100011 .
b11010010010000000100011 /
b11010010010000000100011 @
b11010010010000000100011 H
b110 -
b10000000000000000011000 &
b10000000000000000011000 6
b10000000000000000011000 Q
b10000000000000000011000 a
b10000000000000000011000 f
b10000000000000000011000 l
1!
#30
0!
#32
b11 L
b11 U
b10000000000000000100000 b
b0 W
b101001101110 X
b100010100000000000011001 R
b100010100000000000011001 `
b1100100 g
b1101111010 N
b1101111010 V
b1101111010 _
b11 $
b11 ,
b11 2
b11 K
b11 M
b11 ^
b10000000000000010000100 d
b10000000000000010000100 i
b100 ?
b100 C
b100 F
b100 T
b0 <
b0 D
b0 G
b0 \
b11001 B
b11001 O
b11001 e
b11001 r
b11001 q
b100 Z
b1010 [
b10000000000000000100000 c
b10000000000000000100000 k
b10000000000000000100000 o
b100010100000000000011001 '
b100010100000000000011001 .
b100010100000000000011001 /
b100010100000000000011001 @
b100010100000000000011001 H
b111 -
b10000000000000000011100 &
b10000000000000000011100 6
b10000000000000000011100 Q
b10000000000000000011100 a
b10000000000000000011100 f
b10000000000000000011100 l
1!
#34
0!
#36
b101001101110 P
b101001101110 ]
b11011 *
b0 L
b0 U
b10000000000000000100100 b
b101001101110 )
b101001101110 >
b101001101110 S
b101001101110 Y
b11000000010010 R
b11000000010010 `
b1100000001001000 g
b0 N
b0 V
b0 _
b0 $
b0 ,
b0 2
b0 K
b0 M
b0 ^
b10000001100000001101100 d
b10000001100000001101100 i
b11 ?
b11 C
b11 F
b11 T
b110 <
b110 D
b110 G
b110 \
b10010 B
b11000000010010 O
b11000000010010 e
b11000000010010 r
b11000000010010 q
b0 Z
b0 [
b10000000000000000100100 c
b10000000000000000100100 k
b10000000000000000100100 o
b11000000010010 '
b11000000010010 .
b11000000010010 /
b11000000010010 @
b11000000010010 H
b1000 -
b10000000000000000100000 &
b10000000000000000100000 6
b10000000000000000100000 Q
b10000000000000000100000 a
b10000000000000000100000 f
b10000000000000000100000 l
1!
#38
0!
#40
b0 P
b0 ]
b0 *
b10000000000000000101000 b
01
b0 )
b0 >
b0 S
b0 Y
b11100000010000 R
b11100000010000 `
b1110000001000000 g
b10000001110000001101000 d
b10000001110000001101000 i
b10 ?
b10 C
b10 F
b10 T
b111 <
b111 D
b111 G
b111 \
b10000 B
b11100000010000 O
b11100000010000 e
b11100000010000 r
b11100000010000 q
b10000000000000000101000 c
b10000000000000000101000 k
b10000000000000000101000 o
b11100000010000 '
b11100000010000 .
b11100000010000 /
b11100000010000 @
b11100000010000 H
b1001 -
b10000000000000000100100 &
b10000000000000000100100 6
b10000000000000000100100 Q
b10000000000000000100100 a
b10000000000000000100100 f
b10000000000000000100100 l
1!
#42
0!
#44
bx *
xj
x1
bx )
bx >
bx S
bx Y
bx P
bx ]
bx b
bx L
bx U
bx R
bx `
bx00 g
bx N
bx V
bx _
bx $
bx ,
bx 2
bx K
bx M
bx ^
bx d
bx i
x4
bx ?
bx C
bx F
bx T
x9
x8
x:
x7
x(
x;
x=
bx <
bx D
bx G
bx \
x5
bx A
bx B
bx O
bx e
bx r
bx q
bx Z
bx [
b10000000000000000101100 c
b10000000000000000101100 k
b10000000000000000101100 o
bx '
bx .
bx /
bx @
bx H
b1010 -
b10000000000000000101000 &
b10000000000000000101000 6
b10000000000000000101000 Q
b10000000000000000101000 a
b10000000000000000101000 f
b10000000000000000101000 l
1!
#46
0!
#48
bx c
bx k
bx o
xp
bx -
bx &
bx 6
bx Q
bx a
bx f
bx l
1!
#50
0!
#52
1!
#54
0!
#55
b100000 #
